
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */
#define BASE 0
#define KEYPAD 1
#define FN 2
#define MOD 3
#define QWERTY 4
#define NAVIGATION 5


#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

#define MEH(key) LS(LC(LA(key)))

#define HYP(key) LS(LC(LA((key))))
#define HYPER    LS(LC(LA(LGUI)))

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

&mt {
    tapping-term-ms = <210>;
    flavor = "tap-preferred";
    quick_tap_ms = <200>;
};

&lt {
    quick_tap_ms = <200>;
};

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

		mo_tog: behavior_mo_tog {
				compatible = "zmk,behavior-hold-tap";
				label = "mo_tog";
				#binding-cells = <2>;
				flavor = "hold-preferred";
				tapping-term-ms = <200>;
				bindings = <&mo>, <&tog>;
			};
	};

	keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &mt HYPER  EQUAL            &kp N1     &kp N2      &kp N3     &kp N4    &kp N5             &tog KEYPAD      &mo MOD     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0  &mt HYPER MINUS
   &kp TAB  &kp SINGLE_QUOTE  &kp COMMA  &kp PERIOD      &kp P     &kp Y              MO_TOG(NAVIGATION)      MO_TOG(NAVIGATION)      &kp F      &kp G      &kp C      &kp R     &kp L  &kp SLASH
   &kp ESC     &hm LALT A      &hm LCTRL O       &hm LGUI E      &hm LSHFT U     &kp I              MO_TOG(NAVIGATION)  &mt LGUI ESC   &kp LCTRL                        &kp RCTRL  &kp RGUI      MO_TOG(NAVIGATION)     &kp D   &hm RSHFT H   &hm RGUI T   &hm RCTRL N   &hm RALT S  &kp BACKSLASH
 &kp LSHFT     &kp SEMICOLON      &kp Q       &kp J      &kp K     &kp X              &none      &none   &mt LALT HOME      &none      &none  &mt RALT PG_UP     &none      &none     &kp B   &kp M   &kp W   &kp V   &kp Z      &kp RSHFT
     MO_TOG(2)     &kp GRAVE   &kp CAPS    &kp LEFT  &kp RIGHT  &mt LSHFT BSPC     &lt 2 DEL    &kp END  &kp PG_DN  &lt 2 ENTER  &mt RSHFT SPACE     &kp UP  &kp DOWN   &kp LBKT  &kp RBKT   &mo FN
            >;
        };


        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4    &kp N5             &trans      &mo MOD     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R     &kp T              &none      &none      &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F     &kp G              &none  &kp LCTRL   &kp LALT                                 &kp LGUI        &kp RCTRL       &none     &kp H  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V     &kp B              &none      &none   &kp HOME       &none         &none      &kp PG_UP            &none       &none     &kp N  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
     &mo FN  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT  &kp BSPC            &kp DEL    &kp END  &kp PG_DN   &kp ENTER     &kp KP_N0         &kp UP         &kp DOWN  &kp KP_DOT  &kp RBKT      &mo FN
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog KEYPAD   &mo MOD  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11               &kp F12
 &trans  &trans  &kp LC(LS(TAB))  &trans  &kp LC(TAB)  &kp LG(T)             &none   &none  &trans  &trans  &kp C   &trans   &trans  &kp LG(LC(NUMBER_9))
 &trans  &kp LG(LS(A))  &kp S     &kp D      &kp F     &kp G             &none  &trans  &trans                   &trans   &trans                 &none  &trans  &kp MEH(H)  &kp T  &kp N  &kp S  &kp LG(NUMBER_9)
 &trans  &trans  &trans  &kp LG(W)  &kp V     &kp B             &none   &none  &trans   &none   &none   &trans    &none                 &none  &trans  &trans  &trans  &trans  &kp LG(LA(Z))            &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans   &trans   &trans                &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

		qwerty {
								bindings = <
		 &mt HYPER  EQUAL            &kp N1     &kp N2      &kp N3     &kp N4    &kp N5             &tog KEYPAD      &mo MOD     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0  &mt HYPER MINUS
			 &kp TAB  &kp Q  &kp W  &kp E      &kp R     &kp T              &trans       &none      &kp Y      &kp U      &kp I      &kp O     &kp P  &kp BACKSLASH
			 &kp ESC     &hm LALT A      &hm LCTRL S       &hm LGUI D      &hm LSHFT F     &kp G              &kp LG(SPACE)  &mt LGUI ESC   &kp LCTRL                        &kp RCTRL  &kp RGUI      &none     &kp H   &hm RSHFT J   &hm RGUI K   &hm RCTRL L   &hm RALT SEMICOLON  &kp SINGLE_QUOTE
		 &kp LSHFT     &kp Z      &kp X       &kp C      &kp V     &kp B              &none      &none   &mt LALT HOME      &none      &none  &mt RALT PG_UP     &none      &none     &kp N   &kp M   &kp COMMA   &kp PERIOD   &kp SLASH      &kp RSHFT
				 &mo FN         &kp GRAVE   &kp CAPS    &kp LEFT  &kp RIGHT  &kp BSPC            &lt 2 DEL    &kp END  &kp PG_DN  &lt 2 ENTER  &kp SPACE     &kp UP  &kp DOWN   &kp LBKT  &kp RBKT   &mo FN
								>;
						};

		navigation {
			bindings = <
				&mt HYPER  EQUAL            &kp N1     &kp N2      &kp N3     &kp N4    &kp N5             &tog 1      &mo 3     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0  &mt HYPER MINUS
				&kp TAB  &kp SINGLE_QUOTE  &kp COMMA  &kp PERIOD      &kp P     &kp X              &trans      &trans      &kp MEH(F)      &kp MEH(G)      &kp MEH(C)      &kp MEH(R)     &kp MEH(L)  &kp SLASH
				&kp ESC     &kp MEH(A)      &kp MEH(O)       &kp MEH(E)      &kp MEH(U)     &kp I              &trans  &mt LGUI ESC   &kp LCTRL                        &kp RCTRL  &kp RGUI      &trans     &kp MEH(D)   &kp MEH(H)   &kp MEH(T)   &kp MEH(N)   &kp MEH(S)  &kp BACKSLASH
				&kp LSHFT     &kp MEH(SEMICOLON)      &kp MEH(Q)       &kp MEH(J)      &kp MEH(K)     &kp X              &none      &none   &mt LALT HOME      &none      &none  &mt RALT PG_UP     &none      &none     &kp MEH(B)   &kp MEH(M)   &kp MEH(W)   &kp MEH(V)   &kp MEH(Z)      &kp RSHFT
				MO_TOG(FN)         &kp GRAVE   &kp CAPS    &kp LEFT  &kp RIGHT  &kp BSPC            &lt 2 DEL    &kp END  &kp PG_DN  &kp MEH(R)  &kp MEH(L)     &kp UP  &kp DOWN   &kp LBKT  &kp RBKT   &mo FN
				>;
		};
	};
};
