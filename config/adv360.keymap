
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESCAPE            &kp N1     &kp N2       &kp N3   &kp N4                      &kp N5            &none     &mo 3     &kp N6     &kp N7     &kp N8    &kp N9    &kp N0  &kp BACKSLASH
      &kp TAB  &kp SINGLE_QUOTE  &kp COMMA   &kp PERIOD    &kp P                       &kp Y            &none     &none      &kp F      &kp G      &kp C     &kp R     &kp L      &kp SLASH
 &lt 4 ESCAPE             &kp A      &kp O        &kp E    &kp U                       &kp I            &mo 4  &kp LCMD      &mo 3                           &mo 3  &kp RCMD          &none   &kp D   &kp H   &kp T   &kp N   &kp S  &kp MINUS
    &kp LSHFT     &kp SEMICOLON      &kp Q        &kp J    &kp K                       &kp X            &none     &none      &mo 4      &none      &none  &kp RALT     &none          &none   &kp B   &kp M   &kp W   &kp V   &kp Z  &kp RSHFT
        &mo 2             &none      &none  &kp LS(TAB)  &kp TAB  &mt LEFT_CONTROL BACKSPACE            &mo 1     &mo 3  &kp RCTRL  &kp ENTER  &kp SPACE     &none     &none          &none   &none   &mo 2
            >;
        };

        layer_fn {
            bindings = <
    &kp F1  &kp F2            &kp F3                   &kp F4               &kp F5  &kp F6            &tog 1   &mo 3       &kp F7              &kp F8        &kp F9              &kp F10  &kp F11  &kp F12
    &trans  &trans  &kp LA(LG(LEFT))                   &trans    &kp LA(LG(RIGHT))  &trans             &none   &none  &kp PAGE_UP  &kp LG(LEFT_ARROW)  &kp UP_ARROW  &kp LG(RIGHT_ARROW)   &trans   &trans
 &kp GRAVE  &trans            &trans                   &trans               &trans  &trans             &none  &trans       &trans                                                 &trans   &trans    &none  &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
    &trans  &trans            &trans                   &trans               &trans  &trans             &none   &none       &trans               &none         &none               &trans    &none    &none         &trans    &trans    &trans     &trans  &trans  &trans
    &trans  &trans            &trans  &kp LS(LG(LA(LC(TAB))))  &kp LG(LC(LA(TAB)))  &trans            &trans  &trans       &trans          &kp DELETE        &trans               &trans   &trans   &trans         &trans    &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_Symbols {
            bindings = <
 &kp GRAVE            &kp F1         &kp F2            &kp F3             &kp F4      &kp F5             &none   &none         &kp F6     &kp F7            &kp F8             &kp F9      &kp F10  &kp F11
    &trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp PERIOD            &trans   &none  &kp AMPERSAND  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT  &kp F12
 &kp GRAVE   &kp EXCLAMATION      &kp MINUS          &kp PLUS          &kp EQUAL    &kp HASH            &trans  &trans         &trans                                          &trans       &trans   &trans   &kp PIPE   &kp COLON  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
    &trans         &kp CARET      &kp SLASH      &kp ASTERISK      &kp BACKSLASH      &trans            &trans  &trans         &trans     &trans            &trans             &trans       &trans   &trans  &kp TILDE  &kp DOLLAR        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT  &trans
    &trans            &trans         &trans            &trans             &trans      &trans            &trans  &trans         &trans     &trans            &trans             &trans       &trans   &trans     &trans      &trans
            >;
        };

        layer_Mouse {
            bindings = <
 &trans  &trans      &trans     &trans     &trans       &trans                     &trans  &trans     &trans         &trans        &trans     &trans  &trans  &trans
 &trans  &trans      &trans     &trans     &trans       &trans                     &trans  &trans  &kp KP_N1      &kp KP_N2     &kp KP_N3  &kp KP_N4  &trans  &trans
 &trans  &trans  &kp KP_DOT  &kp KP_N0  &kp KP_N9       &trans                     &trans  &trans     &trans                                  &trans  &trans  &trans  &kp KP_N5  &kp KP_N6  &kp KP_N7  &kp KP_N8  &trans  &trans
 &trans  &trans      &trans     &trans     &trans       &trans                     &trans  &trans     &trans         &trans        &trans     &trans  &trans  &trans     &trans     &trans     &trans     &trans  &trans  &trans
 &trans  &trans      &trans     &trans     &trans  &kp KP_PLUS            &kp KP_MULTIPLY  &trans     &trans  &kp KP_DIVIDE  &kp KP_MINUS     &trans  &trans  &trans     &trans     &trans
            >;
        };

    };
};
